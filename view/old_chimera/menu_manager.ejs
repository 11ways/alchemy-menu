<%
expands('layouts/admin_main');

start('chimera-page-title'); -%>
<div class="adminActionHead">
	<span class="title" id="mainTitle">Menu Manager</span>
	<div class="actions paginate-actions">
		<% chimera.actions(['record', 'paginate']) %>
	</div>
	<div class="clear"></div>
</div>
<% end('chimera-page-title');

start(store('chimera-view-setting').contentblock) %>

<div class="row menu-manager">
	<div class="col-md-3">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="panel-title">
					Available items
				</div>
			</div>
			<div class="panel-body">
				<% menu.nestableSource(); %>
			</div>
		</div>
	</div>

	<div class="col-md-9">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="panel-title">
					Menu
				</div>
			</div>
			<div class="panel-body">
				<% menu.nestable(); %>
			</div>
		</div>
	</div>
</div>

<div id="tempeditor">
	<div class="modal fade" id="myMenuModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
					<h4 class="modal-title" id="myModalLabel">Modal title</h4>
				</div>
				
				<div class="modal-body">
					<% assign('tempeditor') %>
				</div>
				<div class="modal-footer">

				</div>
			</div>
		</div>
	</div>
</div>

<script>
(function() {

var baseUrl = <% echo(JSON.stringify(pieceUrl)) %>,
    menuId  = <% echo(JSON.stringify(menuId)) %>,
    menuSource = <% echo(JSON.stringify(menuSource)) %>,
    $editor = $('#nestable-menu-editor');

$editor.on('click', '.dd3-config', function(e) {

	var $this = $(this),
	    $li   = $this.parents('li'),
	    id    = $li.attr('data-id'),
	    url;

	url = hawkejs.fillParam(baseUrl, {pieceid: id});

	// Call up the configure url
	hawkejs.goToAjaxView(url, undefined, undefined, function(payload){
		console.log('Loaded & rendered menu piece config url')
	});
});

$editor.on('click', '.action-trash-o', function(e) {

	var $this = $(this),
	    $li   = $this.parent('li'),
	    id    = $li.attr('data-id'),
	    url;

	url = hawkejs.fillParam(baseUrl, {pieceid: id});

	$.post(url, {'delete': true}, function(result) {

		if (!result.pieceErr) {
			$li.remove();
		}
	});
});


// Show a modal when menu piece config data is loaded
hawkejs.event.on({create: 'block', name: 'tempeditor'}, function(identifier, data) {
	$('#tempeditor div.modal').modal();
});

/**
 * Convert a nestable source data tree into a simple list
 *
 * @author   Jelle De Loecker   <jelle@develry.be>
 * @since    0.0.1
 * @version  0.0.1
 *
 * @param    {Array}   items
 * @param    {Object}  children
 * @param    {String}  parent_id
 */
function detree(items, children, parent_id) {

	var item,
	    i;

	for (i = 0; i < children.length; i++) {

		item = children[i];

		if (parent_id) {
			item.parent = parent_id;
		}

		items.push(item);

		if (item.children) {
			detree(items, item.children, item.id);
		}

		delete item.children;
	}
}

function mm_createMenuItem(item) {

	var url   = hawkejs.fillParam(baseUrl, {pieceid: item.sourceId}),
	    data  = {},
	    items = [],
	    nItem,
	    newNr,
	    tree;

	tree = $(item.destRoot).nestable('serialize');
	detree(items, tree);

	// Find the order for the new item
	for (i = 0; i < items.length; i++) {
		if (item.sourceId === items[i].id) {
			newNr = items.length - i;
			nItem = items[i];
			break;
		}
	}

	data.ModelEditorField = {
		order: newNr
	};

	if (item.destId) {
		data.ModelEditorField.parent = item.destId;
	} else {
		data.ModelEditorField.parent = null;
	}

	// Save the order
	mm_orderMenu(item, items);

	hawkejs.goToAjaxView(url, undefined, {menuId: menuId, createNew: true, data: data}, function(payload) {

		// Set the new id
		nItem.id = payload.piece._id;

		var $item = $(item.sourceEl);

		url = hawkejs.fillParam(baseUrl, {pieceid: payload.piece._id});
		$('#MenuPieceAddForm').attr('action', url);

		$item.data('id', payload.piece._id);
		$('.dd3-content', $item).html(payload.pieceTitle);
	});

};

function mm_orderMenu(item, items) {

	var url   = baseUrl.beforeLast('/') + '_order',
	    ordered = {},
	    piece,
	    newId,
	    tree,
	    i;

	if (!items) {
		items = [];
		tree = $(item.destRoot).nestable('serialize');
		detree(items, tree);
	}

	for (i = 0; i < items.length; i++) {

		piece = items[i];

		if (!String(piece.id).isObjectId) {
			continue;
		}

		newId = items.length - i;

		// Make sure the entry exists
		if (!menuSource[piece.id]) {
			menuSource[piece.id] = {settings: {order: -1}};
		}

		// Only update if the order has changed
		if (menuSource[piece.id].settings.order != newId) {
			ordered[piece.id] = newId;

			// Also store it in the item again, because we're not reloading the page
			menuSource[piece.id].settings.order = newId
		}
	}

	if (Object.isEmpty(ordered)) return;

	$.post(url, {ordered: ordered}, function(result) {
		
	});
};

hawkejs.event.on('menu-manager-drop', function(identifier, item) {

	if (String(item.sourceId).isObjectId()) {
		mm_orderMenu(item);
	} else {
		mm_createMenuItem(item);
	}
});
}());
</script>
<% end(store('chimera-view-setting').contentblock) %>